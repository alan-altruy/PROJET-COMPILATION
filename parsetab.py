
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADD_OPleftMUL_OPleftLPARRPARleftSEMICOLONleftCOMPleftORleftANDleftDOTleftCOMMAleftASSIGNATIONADD_OP AND ASSIGNATION BOOL COMMA COMP DO DOT ENDFOR ENDIF FOR IF IN INT LDUMBO LPAR MUL_OP OR PRINT RDUMBO RPAR SEMICOLON STRING TXT VARIABLEprogramme : TXT\n                 | TXT programme\n                 | dumbo_bloc\n                 | dumbo_bloc programmedumbo_bloc : LDUMBO expressions_list RDUMBO\n                  | LDUMBO RDUMBOexpressions_list : expression SEMICOLON expressions_list\n                        | expression SEMICOLONexpression : PRINT string_expression\n                  | FOR VARIABLE IN string_list DO expressions_list ENDFOR\n                  | FOR VARIABLE IN VARIABLE DO expressions_list ENDFOR\n                  | IF boolean_expression DO expressions_list ENDIF\n                  | VARIABLE ASSIGNATION string_expression\n                  | VARIABLE ASSIGNATION string_list\n                  | VARIABLE ASSIGNATION int_expression\n                  | VARIABLE ASSIGNATION boolean_expressionstring_expression : STRING\n                  | VARIABLE\n                  | string_expression DOT string_expressionint_expression : INT\n                      | int_term ADD_OP int_term\n                      | int_term MUL_OP int_termint_term : VARIABLE\n                | int_expression\n                | LPAR int_expression RPARboolean_expression : BOOL\n                          | int_term COMP int_term\n                          | boolean_term OR boolean_term\n                          | boolean_term AND boolean_termboolean_term : VARIABLE\n                    | boolean_expressionstring_list : LPAR string_list_interior RPARstring_list_interior : STRING\n                            | STRING COMMA string_list_interior'
    
_lr_action_items = {'TXT':([0,2,3,8,14,],[2,2,2,-6,-5,]),'LDUMBO':([0,2,3,8,14,],[4,4,4,-6,-5,]),'$end':([1,2,3,5,6,8,14,],[0,-1,-3,-2,-4,-6,-5,]),'RDUMBO':([4,7,15,29,],[8,14,-8,-7,]),'PRINT':([4,15,39,63,64,],[10,10,10,10,10,]),'FOR':([4,15,39,63,64,],[11,11,11,11,11,]),'IF':([4,15,39,63,64,],[13,13,13,13,13,]),'VARIABLE':([4,10,11,13,15,20,27,30,31,37,39,40,41,42,43,44,63,64,],[12,18,19,25,12,32,47,18,49,47,12,47,47,47,59,59,12,12,]),'SEMICOLON':([9,16,17,18,22,26,28,32,33,34,35,36,47,48,55,56,57,58,59,60,61,62,65,67,71,72,],[15,-9,-17,-18,-26,-24,-20,-18,-13,-14,-15,-16,-23,-19,-27,-21,-22,-28,-30,-31,-29,-25,-32,-12,-11,-10,]),'STRING':([10,20,30,37,51,66,],[17,17,17,53,53,53,]),'ASSIGNATION':([12,],[20,]),'BOOL':([13,20,43,44,],[22,22,22,22,]),'LPAR':([13,20,27,31,37,40,41,42,43,44,],[27,37,27,51,27,27,27,27,27,27,]),'INT':([13,20,27,37,40,41,42,43,44,],[28,28,28,28,28,28,28,28,28,]),'ENDIF':([15,29,54,],[-8,-7,67,]),'ENDFOR':([15,29,68,69,],[-8,-7,71,72,]),'DOT':([16,17,18,32,33,48,],[30,-17,-18,-18,30,-19,]),'IN':([19,],[31,]),'DO':([21,22,26,28,47,49,50,55,56,57,58,59,60,61,62,65,],[39,-26,-24,-20,-23,63,64,-27,-21,-22,-28,-30,-31,-29,-25,-32,]),'OR':([21,22,24,25,26,28,32,36,47,55,56,57,58,59,60,61,62,],[-31,-26,43,-30,-24,-20,-30,-31,-23,-27,-21,-22,-28,-30,-31,-29,-25,]),'AND':([21,22,24,25,26,28,32,36,47,55,56,57,58,59,60,61,62,],[-31,-26,44,-30,-24,-20,-30,-31,-23,-27,-21,-22,44,-30,-31,-29,-25,]),'COMP':([23,25,26,28,32,35,38,47,56,57,59,62,],[40,-23,-24,-20,-23,-24,40,-23,-21,-22,-23,-25,]),'ADD_OP':([23,25,26,28,32,35,38,45,46,47,55,56,57,59,62,],[41,-23,-24,-20,-23,-24,41,-24,41,-23,41,-21,-22,-23,-25,]),'MUL_OP':([23,25,26,28,32,35,38,45,46,47,55,56,57,59,62,],[42,-23,-24,-20,-23,-24,42,-24,42,-23,42,42,-22,-23,-25,]),'RPAR':([26,28,45,47,52,53,56,57,62,70,],[-24,-20,62,-23,65,-33,-21,-22,-25,-34,]),'COMMA':([53,],[66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,2,3,],[1,5,6,]),'dumbo_bloc':([0,2,3,],[3,3,3,]),'expressions_list':([4,15,39,63,64,],[7,29,54,68,69,]),'expression':([4,15,39,63,64,],[9,9,9,9,9,]),'string_expression':([10,20,30,],[16,33,48,]),'boolean_expression':([13,20,43,44,],[21,36,60,60,]),'int_term':([13,20,27,37,40,41,42,43,44,],[23,38,46,46,55,56,57,23,23,]),'boolean_term':([13,20,43,44,],[24,24,58,61,]),'int_expression':([13,20,27,37,40,41,42,43,44,],[26,35,45,45,26,26,26,26,26,]),'string_list':([20,31,],[34,50,]),'string_list_interior':([37,51,66,],[52,52,70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> TXT','programme',1,'p_programme','dumbo.py',20),
  ('programme -> TXT programme','programme',2,'p_programme','dumbo.py',21),
  ('programme -> dumbo_bloc','programme',1,'p_programme','dumbo.py',22),
  ('programme -> dumbo_bloc programme','programme',2,'p_programme','dumbo.py',23),
  ('dumbo_bloc -> LDUMBO expressions_list RDUMBO','dumbo_bloc',3,'p_dumbo_bloc','dumbo.py',33),
  ('dumbo_bloc -> LDUMBO RDUMBO','dumbo_bloc',2,'p_dumbo_bloc','dumbo.py',34),
  ('expressions_list -> expression SEMICOLON expressions_list','expressions_list',3,'p_expressions_list','dumbo.py',44),
  ('expressions_list -> expression SEMICOLON','expressions_list',2,'p_expressions_list','dumbo.py',45),
  ('expression -> PRINT string_expression','expression',2,'p_expression','dumbo.py',53),
  ('expression -> FOR VARIABLE IN string_list DO expressions_list ENDFOR','expression',7,'p_expression','dumbo.py',54),
  ('expression -> FOR VARIABLE IN VARIABLE DO expressions_list ENDFOR','expression',7,'p_expression','dumbo.py',55),
  ('expression -> IF boolean_expression DO expressions_list ENDIF','expression',5,'p_expression','dumbo.py',56),
  ('expression -> VARIABLE ASSIGNATION string_expression','expression',3,'p_expression','dumbo.py',57),
  ('expression -> VARIABLE ASSIGNATION string_list','expression',3,'p_expression','dumbo.py',58),
  ('expression -> VARIABLE ASSIGNATION int_expression','expression',3,'p_expression','dumbo.py',59),
  ('expression -> VARIABLE ASSIGNATION boolean_expression','expression',3,'p_expression','dumbo.py',60),
  ('string_expression -> STRING','string_expression',1,'p_string_expression','dumbo.py',72),
  ('string_expression -> VARIABLE','string_expression',1,'p_string_expression','dumbo.py',73),
  ('string_expression -> string_expression DOT string_expression','string_expression',3,'p_string_expression','dumbo.py',74),
  ('int_expression -> INT','int_expression',1,'p_int_expression','dumbo.py',84),
  ('int_expression -> int_term ADD_OP int_term','int_expression',3,'p_int_expression','dumbo.py',85),
  ('int_expression -> int_term MUL_OP int_term','int_expression',3,'p_int_expression','dumbo.py',86),
  ('int_term -> VARIABLE','int_term',1,'p_int_term','dumbo.py',94),
  ('int_term -> int_expression','int_term',1,'p_int_term','dumbo.py',95),
  ('int_term -> LPAR int_expression RPAR','int_term',3,'p_int_term','dumbo.py',96),
  ('boolean_expression -> BOOL','boolean_expression',1,'p_boolean_expression','dumbo.py',106),
  ('boolean_expression -> int_term COMP int_term','boolean_expression',3,'p_boolean_expression','dumbo.py',107),
  ('boolean_expression -> boolean_term OR boolean_term','boolean_expression',3,'p_boolean_expression','dumbo.py',108),
  ('boolean_expression -> boolean_term AND boolean_term','boolean_expression',3,'p_boolean_expression','dumbo.py',109),
  ('boolean_term -> VARIABLE','boolean_term',1,'p_boolean_term','dumbo.py',126),
  ('boolean_term -> boolean_expression','boolean_term',1,'p_boolean_term','dumbo.py',127),
  ('string_list -> LPAR string_list_interior RPAR','string_list',3,'p_string_list','dumbo.py',135),
  ('string_list_interior -> STRING','string_list_interior',1,'p_string_list_interior','dumbo.py',140),
  ('string_list_interior -> STRING COMMA string_list_interior','string_list_interior',3,'p_string_list_interior','dumbo.py',141),
]
